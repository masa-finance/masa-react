/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type {
  ISoulName,
  ISoulNameInterface,
} from '../../../../../@masa-finance/masa-contracts-identity/contracts/interfaces/ISoulName';

const _abi = [
  {
    inputs: [],
    name: 'getExtension',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'identityId',
        type: 'uint256',
      },
    ],
    name: 'getSoulNames',
    outputs: [
      {
        internalType: 'string[]',
        name: 'sbtNames',
        type: 'string[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'getSoulNames',
    outputs: [
      {
        internalType: 'string[]',
        name: 'sbtNames',
        type: 'string[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
    ],
    name: 'getTokenData',
    outputs: [
      {
        internalType: 'string',
        name: 'sbtName',
        type: 'string',
      },
      {
        internalType: 'bool',
        name: 'linked',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: 'identityId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'expirationDate',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'active',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
    ],
    name: 'getTokenId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
    ],
    name: 'isAvailable',
    outputs: [
      {
        internalType: 'bool',
        name: 'available',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'yearsPeriod',
        type: 'uint256',
      },
      {
        internalType: 'string',
        name: '_tokenURI',
        type: 'string',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class ISoulName__factory {
  static readonly abi = _abi;
  static createInterface(): ISoulNameInterface {
    return new utils.Interface(_abi) as ISoulNameInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISoulName {
    return new Contract(address, _abi, signerOrProvider) as ISoulName;
  }
}
